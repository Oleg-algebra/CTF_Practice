'=================================SOLVED====================='
#p and q - rsa divisors
p=1680613444652105838344133706142211604381500993652031705380909307238347587888162431490921255465344239
q=2143532995881162829855694296384103840144300960388531553947710050014176459461784664429637761367242287
# e - public key
e=65537
# c - encrypted message
c=1921902980210977295270519710634709719343372281625129194637780159651252905527903923450045434239794433327822136581724693103107581315471305119544244907185643235873825200596556268483571243342863955690176
# message - decrypted message in decimal form
message=2216869326117953482375247703586116586448184371
RSA_100=p*q
num=(p-1)*(q-1)
import sympy
# d - private key
d=sympy.mod_inverse(e,num) # find d
hex_message=hex(message)  # transform message from decimal to hex
print(d)
print(hex_message)
#print(d)
#print(len(str(d)))
#res=numpy.power(l1,l2)
#print(res)
